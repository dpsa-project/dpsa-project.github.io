window.SIDEBAR_ITEMS = {"attr":[["async_trait",""]],"enum":[["Binding","A wrapper enum that has blanket implementations for common traits like TryFrom, Stream, AsyncRead, and AsyncWrite. This can contain listeners (like TcpListener), Streams (like Incoming), or bytestreams (like TcpStream)."]],"struct":[["CloneCounter","an atomic counter that increments on clone & decrements on drop"],["CloneCounterObserver","An observer that can be cloned without modifying the clone counter, but can be used to inspect its state and awaited"],["Config","Primary entrypoint for configuring and running a trillium server"],["ServerHandle","A handle for a spawned trillium server. Returned by [`Config::handle`][crate::Config::handle] and [`Config::spawn`][crate::Config::spawn]"],["Stopper","This struct provides a synchronized mechanism for canceling Futures and Streams."],["Url","A parsed URL record."]],"trait":[["Acceptor","This trait provides the common interface for server-side tls acceptors, abstracting over various implementations"],["AsyncRead","Read bytes asynchronously."],["AsyncWrite","Write bytes asynchronously."],["ConfigExt","Server-implementer interfaces to Config"],["Connector","Interface for runtime and tls adapters for the trillium client"],["ObjectSafeConnector",""],["Server","The server trait, for standard network-based server implementations."],["Transport","The interface that the http protocol is communicated over."]]};